generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BlogPost {
  id          BigInt  @id @default(autoincrement())
  title       String  @db.VarChar(255)
  description String
  authored_by BigInt
  chapter     BigInt
  Student     Student @relation(fields: [authored_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "blogpost_authored_by_foreign")
  Chapter     Chapter @relation(fields: [chapter], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "blogpost_chapter_foreign")
}

model Chapter {
  id               BigInt          @id @default(autoincrement())
  name             String          @db.VarChar(255)
  short_name       String          @db.VarChar(100)
  description      String          @db.VarChar(255)
  long_description String
  image            String          @db.VarChar(255)
  BlogPost         BlogPost[]
  ChapterMember    ChapterMember[]
  Event            Event[]

  @@index(fields: [short_name])
}

model ChapterMember {
  id         BigInt  @id @default(autoincrement())
  student_id BigInt
  chapter_id BigInt
  Chapter    Chapter @relation(fields: [chapter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chaptermember_chapter_id_foreign")
  Student    Student @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chaptermember_student_id_foreign")
}

model Event {
  id                BigInt   @id @default(autoincrement())
  name              String   @db.VarChar(255)
  description       String
  date              DateTime @db.Date
  ieee_link         String   @db.VarChar(255)
  registration_link String?  @db.VarChar(255)
  chapter           BigInt
  Chapter           Chapter  @relation(fields: [chapter], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "event_chapter_foreign")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model Role {
  id          BigInt        @id @default(autoincrement())
  access      String        @db.VarChar(255)
  name        String        @db.VarChar(255)
  StudentRole StudentRole[]

  @@index(fields: [access, name])
}

model Student {
  id              BigInt          @id @default(autoincrement())
  name            String          @db.VarChar(255)
  email           String          @db.VarChar(255)
  description     String
  major           String          @db.VarChar(255)
  minor           String?         @db.VarChar(255)
  profile_picture String?         @db.VarChar(255)
  entrance_year   DateTime        @db.Date
  graduation_year DateTime?       @db.Date
  BlogPost        BlogPost[]
  ChapterMember   ChapterMember[]
  StudentRole     StudentRole[]

  @@index(fields: [email])
}

model StudentRole {
  id         BigInt   @id @default(autoincrement())
  student_id BigInt
  role_id    BigInt
  assigned   DateTime @db.Date
  Role       Role     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "studentrole_role_id_foreign")
  Student    Student  @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "studentrole_student_id_foreign")
}
